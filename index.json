{
  "api/ASE_Assignment.AppArray.html": {
    "href": "api/ASE_Assignment.AppArray.html",
    "title": "Class AppArray | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppArray Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents an implementation of an array that inherits from Array class in BOOSE. public class AppArray : Array, ICommand Inheritance object Command Evaluation Array AppArray Implements ICommand Inherited Members Array.PEEK Array.POKE Array.type Array.rows Array.columns Array.valueInt Array.valueReal Array.intArray Array.realArray Array.pokeValue Array.peekVar Array.rowS Array.columnS Array.row Array.column Array.ArrayRestrictions() Array.ReduceRestrictionCounter() Array.Compile() Array.CheckParameters(string[]) Array.Execute() Array.ProcessArrayParametersCompile(bool) Array.ProcessArrayParametersExecute(bool) Array.SetIntArray(int, int, int) Array.SetRealArray(double, int, int) Array.GetIntArray(int, int) Array.GetRealArray(int, int) Array.Rows Array.Columns Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppArray() Initializes a new instance of AppArray class. Calls the ReduceRestrictionsCounter method during initialization. public AppArray()"
  },
  "api/ASE_Assignment.AppCall.html": {
    "href": "api/ASE_Assignment.AppCall.html",
    "title": "Class AppCall | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppCall Namespace ASE_Assignment Assembly ASE_Assignment.dll Representation of call class. Customizes the behaviour by reducing the restictions at the time of initialization. public class AppCall : Call, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Call AppCall Implements ICommand Inherited Members Call.methodName Call.Compile() Call.Execute() CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppCall() Initialize a new instance of AppCall class. public AppCall() Methods Restrictions() Overrides the Restrictions() method of base class. public override void Restrictions()"
  },
  "api/ASE_Assignment.AppCanvas.html": {
    "href": "api/ASE_Assignment.AppCanvas.html",
    "title": "Class AppCanvas | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppCanvas Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents a canvas that is used for drawing objects. This class implements the ICanvas interface. public class AppCanvas : ICanvas Inheritance object AppCanvas Implements ICanvas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppCanvas() Initializes a new instance of AppCanvas class with standard canvas size. public AppCanvas() Fields NegativeValues Error message showing that the given position is smaller than canvas. public const string NegativeValues = \"Cannot have values less than the zero as parameters\" Field Value string PositionLargeThanCanvas Error message showing that the given position is outside the canvas. public const string PositionLargeThanCanvas = \"Specified position is out of canvas\" Field Value string Properties PenColour Gets or sets the current color of the pen used for drawing in the canvas. public object PenColour { get; set; } Property Value object Xpos Gets or sets the current X-position in the canvas. public int Xpos { get; set; } Property Value int Ypos Gets or sets the current Y-position in the canvas. public int Ypos { get; set; } Property Value int Methods Circle(int, bool) Draw a circle at the current X and Y position in th canvas. public void Circle(int radius, bool filled) Parameters radius int The radius of the circle to be drawn. filled bool Indicates if the circle should be filled or just the circumference to be drawn. Exceptions CanvasException Throws when : When the pen is not initialized. if the given radius value is less than zero. Clear() Clears the drawing canvas. public void Clear() DrawTo(int, int) Draws a straight line from the current X-position and Y-position to another coordinates in the canvas. public void DrawTo(int toX, int toY) Parameters toX int The X-position of the ending point in canvas. toY int The Y-param of the ending point in canvas. Exceptions CanvasException Throws when: X-position or Y-position is greater than canvas. X-position or Y-position is less than zero. MoveTo(int, int) Moves the drawing position from current X-position and Y-position to the new position in the canvas. public void MoveTo(int x, int y) Parameters x int The X-position to move to. y int The Y-position to move to. Exceptions CanvasException X-position or Y-position is greater than canvas. X-position or Y-position is less than zero. Rect(int, int, bool) Draws a rectangle at the canvas. public void Rect(int width, int height, bool filled) Parameters width int The width of rectangle. height int The height of rectangle. filled bool Indicates if the rectangle should be filled or just the borders to be drawn. Exceptions CanvasException Throws when: Height or width is greater than canvas. Height or width is less than zero. Reset() Resets the current X-position and Y-position to (0,0), the top left corner of canvas. public void Reset() Set(int, int) Sets the canvas size. public void Set(int xsize, int ysize) Parameters xsize int The width of the canvas. ysize int The height of the canvas. SetColour(int, int, int) Sets the color of the pen that draws in the canvas mixing three different colors. public void SetColour(int red, int green, int blue) Parameters red int The red color of the pen. green int The green color of the pen. blue int The blue color of the pen. Exceptions CanvasException Throws an exception if the the value of red, green or blue is greater than 255. Tri(int, int) Draws a triangle at th ecurrent position in the canvas. public void Tri(int width, int height) Parameters width int The width of the triangle(base). height int The height of the triangle. Exceptions CanvasException Throws when: Height or width is greater than canvas. Height or width is less than zero. WriteText(string) Writes text in the canvas. public void WriteText(string text) Parameters text string String values that are to be written. Exceptions CanvasException Throws an exception if null value is passed to write on the canvas. getBitmap() The current bitmap of the canvas. public object getBitmap() Returns object The bitmap object"
  },
  "api/ASE_Assignment.AppCircle.html": {
    "href": "api/ASE_Assignment.AppCircle.html",
    "title": "Class AppCircle | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppCircle Namespace ASE_Assignment Assembly ASE_Assignment.dll public class AppCircle : Circle, ICommand Inheritance object Command CanvasCommand CommandOneParameter Circle AppCircle Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppCircle() Default constructor that initializes the circle with the default 'not filled' state. public AppCircle() AppCircle(Canvas, int, bool) Initializes a new circle with the specified canvas, radius, and optional filled state. public AppCircle(Canvas c, int radius, bool filled = false) Parameters c Canvas Canvas on which the circle will be drawn. radius int Radius of the circle to be drawn. filled bool Indicates whether the circle should be filled. Defaults to 'false'. Methods CheckParameters(string[]) Validates the parameters for the circle command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] An array of string parameters passed to the circle command. Exceptions CommandException Thrown when the number of parameters is incorrect or the 'filled' parameter is invalid. Execute() Executes the drawing of the circle on the canvas with the specified radius and filled state. public override void Execute()"
  },
  "api/ASE_Assignment.AppClear.html": {
    "href": "api/ASE_Assignment.AppClear.html",
    "title": "Class AppClear | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppClear Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents a command that clears the canvas. Inherits from CanvasCommand class. public class AppClear : CanvasCommand, ICommand Inheritance object Command CanvasCommand AppClear Implements ICommand Inherited Members CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppClear() Initializes a new instance of the AppClear class. Constructor is used when specific canvas is not provided. public AppClear() AppClear(Canvas) Initializes a news instance of the AppClear whose canvas is to be cleared. public AppClear(Canvas c) Parameters c Canvas The canvas to be cleared. Methods CheckParameters(string[]) Validaets the parametres for the clear command. public override void CheckParameters(string[] parameter) Parameters parameter string[] The parameters passed to the command. Exceptions CommandException Thrown when the number of parameter is invalid. Execute() Clears the drawing of the canvas. public override void Execute()"
  },
  "api/ASE_Assignment.AppCommandFactory.html": {
    "href": "api/ASE_Assignment.AppCommandFactory.html",
    "title": "Class AppCommandFactory | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppCommandFactory Namespace ASE_Assignment Assembly ASE_Assignment.dll This class creates commands. Inherits from BOOSE.CommandFactory and overrides the commands. public class AppCommandFactory : CommandFactory, ICommandFactory Inheritance object CommandFactory AppCommandFactory Implements ICommandFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppCommandFactory() Default constructor of AppCommandFactory. public AppCommandFactory() Methods MakeCommand(string) Creates a command based on command given by user. Overrides the MakeCommand methos from BOOSE.CommandFactory class. public override ICommand MakeCommand(string commandType) Parameters commandType string The type of command to create which is passed as s string Returns ICommand An instance of command type or base type if command type is not recognized."
  },
  "api/ASE_Assignment.AppElse.html": {
    "href": "api/ASE_Assignment.AppElse.html",
    "title": "Class AppElse | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppElse Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents an implementation of AppElse class. Reduces the restriction of base class. public class AppElse : Else, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Else AppElse Implements ICommand Inherited Members Else.CheckParameters(string[]) Else.Compile() Else.Execute() Else.CorrespondingEnd CompoundCommand.ReduceRestrictions() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Restrictions() Overrides the Restrictions() method defined in the base class. public override void Restrictions()"
  },
  "api/ASE_Assignment.AppEnd.html": {
    "href": "api/ASE_Assignment.AppEnd.html",
    "title": "Class AppEnd | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppEnd Namespace ASE_Assignment Assembly ASE_Assignment.dll Representa an AppEnd class. public class AppEnd : End, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand End AppEnd Implements ICommand Inherited Members End.Compile() End.Execute() CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppEnd() Initializes a new instance of AppEnd class. Reduces the restrictions upon creation. public AppEnd()"
  },
  "api/ASE_Assignment.AppFor.html": {
    "href": "api/ASE_Assignment.AppFor.html",
    "title": "Class AppFor | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppFor Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents an implementation of the of the BOOSE.For class. Inherits from the base For class.\"/> public class AppFor : For, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand For AppFor Implements ICommand Inherited Members For.Compile() For.Execute() For.LoopControlV For.From For.To For.Step ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppFor() Initializes a new instance of the AppFor class. Constructor does not take parameters. public AppFor()"
  },
  "api/ASE_Assignment.AppIf.html": {
    "href": "api/ASE_Assignment.AppIf.html",
    "title": "Class AppIf | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppIf Namespace ASE_Assignment Assembly ASE_Assignment.dll Represetns an implementation of the If class. public class AppIf : If, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand If AppIf Implements ICommand Inherited Members CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.Compile() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/ASE_Assignment.AppInt.html": {
    "href": "api/ASE_Assignment.AppInt.html",
    "title": "Class AppInt | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppInt Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents an implementation of the Int class. This class handles variable restrictions, compilation and execution related to integers. public class AppInt : Int, ICommand Inheritance object Command Evaluation Int AppInt Implements ICommand Inherited Members Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppInt() Initializes a news instance of AppInt class. Calls the Restrictions() method during initialization to enforce variable limits. public AppInt() Methods Compile() Compiles the integers and adds them to variable table. public override void Compile() Execute() Executes the integer operation. Tries to parse the evaluated string expression a sinteger. public override void Execute() Exceptions StoredProgramException Thrown when the parsing fails Restrictions() Restricts the number of variables to one hundred.Throws RestrictionException public override void Restrictions() Exceptions RestrictionException Thrown when the variable number exceeds one hundred."
  },
  "api/ASE_Assignment.AppMethod.html": {
    "href": "api/ASE_Assignment.AppMethod.html",
    "title": "Class AppMethod | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppMethod Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents an implementation of the Method class. This class creates, compiles and executes the method operations. public class AppMethod : Method, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Method AppMethod Implements ICommand Inherited Members CompoundCommand.ReduceRestrictions() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppMethod() Initializes a news instance of AppMethod. public AppMethod() Exceptions RestrictionException Thrown if method exceeds one hundred. Properties LocalVariables Gets the local variables used for the method. public string[] LocalVariables { get; } Property Value string[] MethodName Gets the method name. public string MethodName { get; } Property Value string Type Gets the method type. public string Type { get; } Property Value string Methods CheckParameters(string[]) Placeholder for parameter validation logic. public override void CheckParameters(string[] parameter) Parameters parameter string[] The parameters to be checked Compile() Compiles the method by parsing and validation parameters. public override void Compile() Exceptions CommandException Thrown if parameter list is invalid. Execute() Executes the method by setting the program counter and adding to the program's list. public override void Execute()"
  },
  "api/ASE_Assignment.AppReal.html": {
    "href": "api/ASE_Assignment.AppReal.html",
    "title": "Class AppReal | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppReal Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents an implementation of Real class public class AppReal : Real, ICommand Inheritance object Command Evaluation Real AppReal Implements ICommand Inherited Members Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppReal() Constructor to initialize the AppReal class and call the Restrictions() method. public AppReal() Properties Value Gets orsets the value of real variable. public double Value { get; set; } Property Value double Methods Compile() Compiles the variables by adding it to the variable list. public override void Compile() Execute() Tries to parse the evaluated expression as double and execute it. public override void Execute() Exceptions StoredProgramException Thrown when parsing is invalid Restrictions() Ensures that upto one thousand variables can be used. public virtual void Restrictions() Exceptions RestrictionException Thrown when more than one thousand variables are created."
  },
  "api/ASE_Assignment.AppStoredProgram.html": {
    "href": "api/ASE_Assignment.AppStoredProgram.html",
    "title": "Class AppStoredProgram | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppStoredProgram Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents an implementation of the stored program. public class AppStoredProgram : StoredProgram, IList, ICollection, IEnumerable, ICloneable, IStoredProgram Inheritance object ArrayList StoredProgram AppStoredProgram Implements IList ICollection IEnumerable ICloneable IStoredProgram Inherited Members StoredProgram.SyntaxOk StoredProgram.AddMethod(Method) StoredProgram.GetMethod(string) StoredProgram.AddVariable(Evaluation) StoredProgram.GetVariable(string) StoredProgram.GetVariable(int) StoredProgram.FindVariable(Evaluation) StoredProgram.FindVariable(string) StoredProgram.VariableExists(string) StoredProgram.GetVarValue(string) StoredProgram.UpdateVariable(string, int) StoredProgram.UpdateVariable(string, double) StoredProgram.UpdateVariable(string, bool) StoredProgram.DeleteVariable(string) StoredProgram.IsExpression(string) StoredProgram.EvaluateExpressionWithString(string) StoredProgram.EvaluateExpression(string) StoredProgram.Push(ConditionalCommand) StoredProgram.Pop() StoredProgram.Add(Command) StoredProgram.NextCommand() StoredProgram.ResetProgram() StoredProgram.Commandsleft() StoredProgram.PC ArrayList.Adapter(IList) ArrayList.Add(object) ArrayList.AddRange(ICollection) ArrayList.BinarySearch(int, int, object, IComparer) ArrayList.BinarySearch(object) ArrayList.BinarySearch(object, IComparer) ArrayList.Clear() ArrayList.Clone() ArrayList.Contains(object) ArrayList.CopyTo(Array) ArrayList.CopyTo(Array, int) ArrayList.CopyTo(int, Array, int, int) ArrayList.FixedSize(ArrayList) ArrayList.FixedSize(IList) ArrayList.GetEnumerator() ArrayList.GetEnumerator(int, int) ArrayList.GetRange(int, int) ArrayList.IndexOf(object) ArrayList.IndexOf(object, int) ArrayList.IndexOf(object, int, int) ArrayList.Insert(int, object) ArrayList.InsertRange(int, ICollection) ArrayList.LastIndexOf(object) ArrayList.LastIndexOf(object, int) ArrayList.LastIndexOf(object, int, int) ArrayList.ReadOnly(ArrayList) ArrayList.ReadOnly(IList) ArrayList.Remove(object) ArrayList.RemoveAt(int) ArrayList.RemoveRange(int, int) ArrayList.Repeat(object, int) ArrayList.Reverse() ArrayList.Reverse(int, int) ArrayList.SetRange(int, ICollection) ArrayList.Sort() ArrayList.Sort(IComparer) ArrayList.Sort(int, int, IComparer) ArrayList.Synchronized(ArrayList) ArrayList.Synchronized(IList) ArrayList.ToArray() ArrayList.ToArray(Type) ArrayList.TrimToSize() ArrayList.Capacity ArrayList.Count ArrayList.IsFixedSize ArrayList.IsReadOnly ArrayList.IsSynchronized ArrayList.this[int] ArrayList.SyncRoot object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppStoredProgram(ICanvas) Initializes a new instance of the AppStoredProgram class. public AppStoredProgram(ICanvas canvas) Parameters canvas ICanvas The canvas associated with program. Methods Run() Runs the stored program. public override void Run() Exceptions RestrictionException Thrown when exceeds the limit."
  },
  "api/ASE_Assignment.AppWhile.html": {
    "href": "api/ASE_Assignment.AppWhile.html",
    "title": "Class AppWhile | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppWhile Namespace ASE_Assignment Assembly ASE_Assignment.dll Represents an implementation of While class. public class AppWhile : While, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand While AppWhile Implements ICommand Inherited Members CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.Compile() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppWhile() Initializes a new instance of AppWhile class and calls the ReduceRestrictions() method. public AppWhile()"
  },
  "api/ASE_Assignment.AppWrite.html": {
    "href": "api/ASE_Assignment.AppWrite.html",
    "title": "Class AppWrite | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppWrite Namespace ASE_Assignment Assembly ASE_Assignment.dll This class writes the output in the canvas. Inherits from CommandOneParameter and implements ICommand public class AppWrite : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter AppWrite Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppWrite() public AppWrite() AppWrite(AppCanvas) Initializes a new instance of the AppWrite class. public AppWrite(AppCanvas canvas) Parameters canvas AppCanvas The canvas object to write the text. Methods CheckParameters(string[]) Checks and assigns the parameter required for command. public override void CheckParameters(string[] parameter) Parameters parameter string[] An array of string that cxontains the parameter. The first paramater is expected to be written Exceptions ArgumentException Throws an exception if the parameter is empty. Execute() Executes the command to display on the canvas. public override void Execute()"
  },
  "api/ASE_Assignment.CanvasException.html": {
    "href": "api/ASE_Assignment.CanvasException.html",
    "title": "Class CanvasException | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class CanvasException Namespace ASE_Assignment Assembly ASE_Assignment.dll This class represetns an exception specific to canvas operations. public class CanvasException : Exception, ISerializable Inheritance object Exception CanvasException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CanvasException(string) Initializes a new instance of the CanvasException with an error message public CanvasException(string message) Parameters message string Message describing the error."
  },
  "api/ASE_Assignment.CommandFactory.html": {
    "href": "api/ASE_Assignment.CommandFactory.html",
    "title": "Class CommandFactory | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class CommandFactory Namespace ASE_Assignment Assembly ASE_Assignment.dll This class implements the ICommandFactory interface. This class is used to create commands. public class CommandFactory : ICommandFactory Inheritance object CommandFactory Implements ICommandFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeCommand(string) Creates a command based on command given by user public virtual ICommand MakeCommand(string commandType) Parameters commandType string The type of command to create which is passed as s string Returns ICommand An instance of the command Exceptions FactoryException"
  },
  "api/ASE_Assignment.Form1.html": {
    "href": "api/ASE_Assignment.Form1.html",
    "title": "Class Form1 | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class Form1 Namespace ASE_Assignment Assembly ASE_Assignment.dll This class represents the main form of the application. This class handles user interactions and integrates canvas , parser and logic. public class Form1 : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form Form1 Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Form1() Initialize a new instance of Form1 class. public Form1() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/ASE_Assignment.HelpMenu.html": {
    "href": "api/ASE_Assignment.HelpMenu.html",
    "title": "Class HelpMenu | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class HelpMenu Namespace ASE_Assignment Assembly ASE_Assignment.dll This class represents a help menu for displaying how to use BOOSE commands if the user needs help. public class HelpMenu : Command, ICommand Inheritance object Command HelpMenu Implements ICommand Inherited Members Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.Execute() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HelpMenu() Initialize a new instance of HelpMenu class. public HelpMenu() Methods CheckParameters(string[]) Checks the format of the parameter that are passed. public override void CheckParameters(string[] parameters) Parameters parameters string[] The parameters to be checked Exceptions ArgumentException Thrown when no parameters are passed. DisplayCommandHelp(string, TextBox) Displayes help menu for the selected command only. public void DisplayCommandHelp(string command, TextBox output_window) Parameters command string The command for which help menu will be displayed. output_window TextBox The place where the help will be displayed. DisplayHelp(TextBox) Displays the help menu with what the command takes in as parameters and example of it. public void DisplayHelp(TextBox output_window) Parameters output_window TextBox The place where the whole help menu is to be displayed"
  },
  "api/ASE_Assignment.PenColour.html": {
    "href": "api/ASE_Assignment.PenColour.html",
    "title": "Class PenColour | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class PenColour Namespace ASE_Assignment Assembly ASE_Assignment.dll This class sets the pencolor based on user input. This class inherits from CommandThreeParameters and implements ICommand. public class PenColour : CommandThreeParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandThreeParameters PenColour Implements ICommand Inherited Members CommandThreeParameters.param3 CommandThreeParameters.param3unprocessed CommandThreeParameters.CheckParameters(string[]) CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Execute() Executes the command to set the pen color. public override void Execute() Exceptions CommandException The exception is thrown when: When the parameters are not exactly three. When RGB values are not valid (0-25). Parameters cannot be converted to integers."
  },
  "api/ASE_Assignment.RestrictionException.html": {
    "href": "api/ASE_Assignment.RestrictionException.html",
    "title": "Class RestrictionException | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class RestrictionException Namespace ASE_Assignment Assembly ASE_Assignment.dll This class throws an exception when certain restrictions are violated. public class RestrictionException : Exception, ISerializable Inheritance object Exception RestrictionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RestrictionException(string) Initializes a new instance of the RestrictionException class. public RestrictionException(string message) Parameters message string The message that describes the exception occurred."
  },
  "api/ASE_Assignment.html": {
    "href": "api/ASE_Assignment.html",
    "title": "Namespace ASE_Assignment | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Namespace ASE_Assignment Classes AppArray Represents an implementation of an array that inherits from Array class in BOOSE. AppCall Representation of call class. Customizes the behaviour by reducing the restictions at the time of initialization. AppCanvas Represents a canvas that is used for drawing objects. This class implements the ICanvas interface. AppCircle AppClear Represents a command that clears the canvas. Inherits from CanvasCommand class. AppCommandFactory This class creates commands. Inherits from BOOSE.CommandFactory and overrides the commands. AppElse Represents an implementation of AppElse class. Reduces the restriction of base class. AppEnd Representa an AppEnd class. AppFor Represents an implementation of the of the BOOSE.For class. Inherits from the base For class.\"/> AppIf Represetns an implementation of the If class. AppInt Represents an implementation of the Int class. This class handles variable restrictions, compilation and execution related to integers. AppMethod Represents an implementation of the Method class. This class creates, compiles and executes the method operations. AppReal Represents an implementation of Real class AppStoredProgram Represents an implementation of the stored program. AppWhile Represents an implementation of While class. AppWrite This class writes the output in the canvas. Inherits from CommandOneParameter and implements ICommand CanvasException This class represetns an exception specific to canvas operations. CommandFactory This class implements the ICommandFactory interface. This class is used to create commands. Form1 This class represents the main form of the application. This class handles user interactions and integrates canvas , parser and logic. HelpMenu This class represents a help menu for displaying how to use BOOSE commands if the user needs help. PenColour This class sets the pencolor based on user input. This class inherits from CommandThreeParameters and implements ICommand. RestrictionException This class throws an exception when certain restrictions are violated."
  },
  "api/ASE_AssignmentTests.ASEAssignmentDrawToTest.html": {
    "href": "api/ASE_AssignmentTests.ASEAssignmentDrawToTest.html",
    "title": "Class ASEAssignmentDrawToTest | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class ASEAssignmentDrawToTest Namespace ASE_AssignmentTests Assembly ASE_AssignmentTests.dll Unit test class for testing the drawto functionality. [TestClass] public class ASEAssignmentDrawToTest Inheritance object ASEAssignmentDrawToTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DrawTo_NegativeValues_ThrowsCanvasException() This method verifies if drawing with negative X-position and Y-position throws CanvasException. [TestMethod] public void DrawTo_NegativeValues_ThrowsCanvasException() DrawTo_OutsideTheCanvas_ThrowsCanvasException() This method verifies if drawing outside the canvas throws CanvasException. [TestMethod] public void DrawTo_OutsideTheCanvas_ThrowsCanvasException() DrawTo_WithinTheCanvas_DrawsInTheCanvas() Test method to verify the drawto method updates the canvas. [TestMethod] public void DrawTo_WithinTheCanvas_DrawsInTheCanvas()"
  },
  "api/ASE_AssignmentTests.ASEAssignmentMoveToTest.html": {
    "href": "api/ASE_AssignmentTests.ASEAssignmentMoveToTest.html",
    "title": "Class ASEAssignmentMoveToTest | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class ASEAssignmentMoveToTest Namespace ASE_AssignmentTests Assembly ASE_AssignmentTests.dll Unit test class for testing the moveto functionality. [TestClass] public class ASEAssignmentMoveToTest Inheritance object ASEAssignmentMoveToTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MoveTo_NegativeValues_ThrowsCanvasException() This method verifies drawing at negative X-position and negative Y-position throws CanvasException. [TestMethod] public void MoveTo_NegativeValues_ThrowsCanvasException() MoveTo_OutsideTheCanvas_ThrowsCanvasException() This method verifies if moving the X-position and Y-position outside the canvas throws CanvasException. [TestMethod] public void MoveTo_OutsideTheCanvas_ThrowsCanvasException() MoveTo_WithinTheCanvas_MovesTothePlace() Test method to verify the moveto method moves to the specifies X-position and Y-position. [TestMethod] public void MoveTo_WithinTheCanvas_MovesTothePlace()"
  },
  "api/ASE_AssignmentTests.AppCommandFactoryTests.html": {
    "href": "api/ASE_AssignmentTests.AppCommandFactoryTests.html",
    "title": "Class AppCommandFactoryTests | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppCommandFactoryTests Namespace ASE_AssignmentTests Assembly ASE_AssignmentTests.dll Test class to verify the functionality of the AppCommandFactory. [TestClass] public class AppCommandFactoryTests Inheritance object AppCommandFactoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeCommandAppArray_ShouldCreateObjectAppArray_CreatesObjectAppArray() Tests whether the factory instantiates AppArray when \"array\" is passed. [TestMethod] public void MakeCommandAppArray_ShouldCreateObjectAppArray_CreatesObjectAppArray() MakeCommandAppCall_ShouldCreateObjectAppCall_CreatesObjectAppCall() Tests whether the factory instantiates AppCall when \"call\" is passed. [TestMethod] public void MakeCommandAppCall_ShouldCreateObjectAppCall_CreatesObjectAppCall() MakeCommandAppClear_ShouldCreateObjectAppClear_CreatesObjectAppClear() Tests whether the factory instantiates AppClear when \"clear\" is passed. [TestMethod] public void MakeCommandAppClear_ShouldCreateObjectAppClear_CreatesObjectAppClear() MakeCommandAppElse_ShouldCreateObjectAppElse_CreatesObjectAppElse() Tests whether the factory instantiates AppElse when \"else\" is passed. [TestMethod] public void MakeCommandAppElse_ShouldCreateObjectAppElse_CreatesObjectAppElse() MakeCommandAppEnd_ShouldCreateObjectAppEnd_CreatesObjectAppEnd() Tests whether the factory instantiates AppEnd when \"end\" is passed. [TestMethod] public void MakeCommandAppEnd_ShouldCreateObjectAppEnd_CreatesObjectAppEnd() MakeCommandAppFor_ShouldCreateObjectFor_CreatesObjectAppFor() Tests whether the factory instantiates AppFor when \"for\" is passed. [TestMethod] public void MakeCommandAppFor_ShouldCreateObjectFor_CreatesObjectAppFor() MakeCommandAppIf_ShouldCreateObjectIf_CreatesObjectAppIf() Tests whether the factory instantiates AppIf when \"if\" is passed. [TestMethod] public void MakeCommandAppIf_ShouldCreateObjectIf_CreatesObjectAppIf() MakeCommandAppInt_ShouldCreateObjectAppInt_CreatesObjectAppInt() Tests whether the factory instantiates AppInt when \"int\" is passed. [TestMethod] public void MakeCommandAppInt_ShouldCreateObjectAppInt_CreatesObjectAppInt() MakeCommandAppMethod_ShouldCreateObjectAppMethod_CreatesObjectAppMethod() Tests whether the factory instantiates AppMethod when \"method\" is passed. [TestMethod] public void MakeCommandAppMethod_ShouldCreateObjectAppMethod_CreatesObjectAppMethod() MakeCommandAppReal_ShouldCreateObjectAppReal_CreatesObjectAppReal() Tests whether the factory instantiates AppReal when \"real\" is passed. [TestMethod] public void MakeCommandAppReal_ShouldCreateObjectAppReal_CreatesObjectAppReal() MakeCommandAppWhile_ShouldCreateObjectAppWhile_CreatesObjectAppWhile() Tests whether the factory instantiates AppWhile when \"while\" is passed. [TestMethod] public void MakeCommandAppWhile_ShouldCreateObjectAppWhile_CreatesObjectAppWhile() MakeCommandAppWrite_ShouldCreateObjectAppWrite_CreatesObjectAppWrite() Tests whether the factory instantiates AppWrite when \"write\" is passed. [TestMethod] public void MakeCommandAppWrite_ShouldCreateObjectAppWrite_CreatesObjectAppWrite() MakeCommandPenColour_ShouldCreateObjectPenColour_CreatesObjectPenColour() Tests whether the factory instantiates PenColour when \"pencolour\" is passed. [TestMethod] public void MakeCommandPenColour_ShouldCreateObjectPenColour_CreatesObjectPenColour()"
  },
  "api/ASE_AssignmentTests.AppMethodTest.html": {
    "href": "api/ASE_AssignmentTests.AppMethodTest.html",
    "title": "Class AppMethodTest | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class AppMethodTest Namespace ASE_AssignmentTests Assembly ASE_AssignmentTests.dll Test class for verifying the functionalities of the AppMethod class. [TestClass] public class AppMethodTest Inheritance object AppMethodTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AppMethod_MoreThanLimit_ThrowsRestrictionException() Tests whether creating multiple instances throws an exception. [TestMethod] public void AppMethod_MoreThanLimit_ThrowsRestrictionException() AppMethod_WithDefaultConstructor_CreatesInstancesofMethod() Tests whether the dafault constructor can create instance successfully. [TestMethod] public void AppMethod_WithDefaultConstructor_CreatesInstancesofMethod()"
  },
  "api/ASE_AssignmentTests.MultiLineTests.html": {
    "href": "api/ASE_AssignmentTests.MultiLineTests.html",
    "title": "Class MultiLineTests | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class MultiLineTests Namespace ASE_AssignmentTests Assembly ASE_AssignmentTests.dll Unit Test class to validate multi-line command parsing abd execution [TestClass] public class MultiLineTests Inheritance object MultiLineTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseProgram_MultiLineCommands_ExecutesCorrectly() Test method to verify the correct execution of multiple commands including moving the pen and checking the current X-position and Y-position and color. [TestMethod] public void ParseProgram_MultiLineCommands_ExecutesCorrectly()"
  },
  "api/ASE_AssignmentTests.StoredProgramTests.html": {
    "href": "api/ASE_AssignmentTests.StoredProgramTests.html",
    "title": "Class StoredProgramTests | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Class StoredProgramTests Namespace ASE_AssignmentTests Assembly ASE_AssignmentTests.dll Test class for verifying functionalities of AppStoredProgram class. [TestClass] public class StoredProgramTests Inheritance object StoredProgramTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods StoredProgram_CallsRunMethod_DoesNotThrowException() Tests whether the Run method of the AppStoredProgram class executes without throwing Exception [TestMethod] public void StoredProgram_CallsRunMethod_DoesNotThrowException()"
  },
  "api/ASE_AssignmentTests.html": {
    "href": "api/ASE_AssignmentTests.html",
    "title": "Namespace ASE_AssignmentTests | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Namespace ASE_AssignmentTests Classes ASEAssignmentDrawToTest Unit test class for testing the drawto functionality. ASEAssignmentMoveToTest Unit test class for testing the moveto functionality. AppCommandFactoryTests Test class to verify the functionality of the AppCommandFactory. AppMethodTest Test class for verifying the functionalities of the AppMethod class. MultiLineTests Unit Test class to validate multi-line command parsing abd execution StoredProgramTests Test class for verifying functionalities of AppStoredProgram class."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | ASE Sushant Adhikari Comp-2 Documentation",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}